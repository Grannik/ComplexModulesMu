
  *** Инструкция по добавлению нового пункта меню в программу: ***

  1. Откройте файл menu_mu.c и найдите функцию init_menu_items.

  2. Скопируйте последний блок пункта меню, например:
     items[11] = (MenuItem){
         .description = L" Red background",
         .details = {L"<l>| \\033[41m | Red background | Цвет фона: красный |"},
         .detail_lines = 1
     };

  3. Вставьте скопированный блок ниже последнего пункта меню.

  4. Измените индекс на items[12]. Это плюс один чем предъидущий.

  5. Обновите поле .description для нового пункта меню.
     Это текст, который будет отображаться в списке меню:
   .description = L"Это строка, которая отображается в меню.",

  6. Обновите поле .details для дополнительной информации,
     которая отображается при выборе пункта (нажатии Enter):
     .details = {
         L"Меняет цвет фона экрана на белый.",
         L"Полезно для тестирования читаемости."
     },

  7. Установите количество строк в .details:
     .detail_lines = 2
     Эта переменная выводит количество видимых строк.
     Применьшем количестве строки остаются не видимы.
     При большем количестве появляется пустая строка.

  9. Убедитесь, что массив .details определен как:
     const wchar_t *details[30];
     Это гарантирует, что он может содержать до 30 строк,
     что больше, чем .detail_lines = 2

 10. Убедитесь, что в функции display_details в minor_menu.c
     цикл вывода строк выглядит так:
     for (int i = 0; i < item->detail_lines && i < 30; i++) {
     Это позволяет отображать до 30 строк информации,
     что достаточно для .detail_lines = 2

 11. (print_menu_items):
     изменить if (item_index >= 22) break; на if (item_index >= 23) break;
     Строка 309 в функции print_menu_items (if (item_index >= 22) break;)
     останавливает цикл вывода пунктов меню, если индекс пункта превышает 21,
     чтобы не выйти за пределы массива items[22].
     Это предотвращает попытку доступа к несуществующим элементам массива.

 12. (handle_input): изменить if (*selected < 0) *selected = 21;
     на if (*selected < 0) *selected = 22;
     Строка 408 в функции handle_input (if (*selected < 0) *selected = 21;)
     проверяет, если индекс выбранного пункта меню (selected) становится меньше 0
     (при движении вверх), и устанавливает его на последний пункт меню (21).
     Это обеспечивает циклическую навигацию по меню.

 13. (handle_input): изменить if (*selected >= 22) *selected = 0;
     на if (*selected >= 23) *selected = 0;
     Строка 415 в функции handle_input (if (*selected >= 22) *selected = 0;)
     проверяет, если индекс выбранного пункта меню (selected) становится больше
     или равен 22 (при движении вниз), и сбрасывает его на первый пункт меню (0).
     Это обеспечивает циклическую навигацию по меню.

 14. Сохраните файлы и скомпилируйте программу.
